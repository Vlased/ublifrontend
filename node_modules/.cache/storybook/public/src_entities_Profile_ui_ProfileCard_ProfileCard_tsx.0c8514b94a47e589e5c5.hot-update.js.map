{"version":3,"file":"src_entities_Profile_ui_ProfileCard_ProfileCard_tsx.0c8514b94a47e589e5c5.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAiBA;AAaA;AAXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAxGA","sources":["webpack://ulbi/./src/entities/Profile/ui/ProfileCard/ProfileCard.tsx"],"sourcesContent":["import { Text, TextAlign, TextTheme } from 'shared/ui/Text/Text'\nimport { useTranslation } from 'react-i18next'\nimport styles from './ProfileCard.module.scss'\nimport { Input } from 'shared/ui/Input/Input'\nimport { Profile } from '../../../../pages/ProfilePage/model/types/profile'\nimport { Loader } from 'shared/ui/Loader/Loader'\nimport { classNames } from 'shared/lib/classNames/classNames'\nimport { Avatar } from 'shared/ui/Avatar/Avatar'\nimport { Currency, CurrencySelect } from '../../../../entities/Currency'\nimport { Country, CountrySelect } from '../../../../entities/Country'\n\ninterface ProfileCardProps {\n  formData?: Profile\n  error?: string\n  isLoading?: boolean\n  readonly?: boolean\n  handleFirstNameChange?: (value?: string) => void\n  handleLastNameChange?: (value?: string) => void\n  handleAgeChange?: (value?: string) => void\n  handleCityChange?: (value?: string) => void\n  handleUsernameChange?: (value?: string) => void\n  handleAvatarChange?: (value?: string) => void\n  handleCurrencyChange?: (value?: Currency) => void\n  handleCountryChange?: (value?: Country) => void\n}\n\nexport const ProfileCard: React.FC<ProfileCardProps> = ({\n  formData,\n  error,\n  isLoading,\n  readonly,\n  handleFirstNameChange,\n  handleLastNameChange,\n  handleAgeChange,\n  handleCityChange,\n  handleUsernameChange,\n  handleAvatarChange,\n  handleCurrencyChange,\n  handleCountryChange\n}) => {\n  const { t } = useTranslation()\n\n  if (isLoading) {\n    return (\n      <div className={classNames([styles.profileCard, styles.loadingContainer])}>\n        <Loader />\n      </div>\n    )\n  }\n\n  if (error) {\n    return (\n      <div className={classNames([styles.profileCard, styles.errorContainer])}>\n        <Text\n          title={t('An unknown error happened')}\n          theme={TextTheme.ERROR}\n          align={TextAlign.CENTER}\n        >\n          {t('Try to refresh the page')}\n        </Text>\n      </div>\n    )\n  }\n\n  return (\n    <div className={classNames([styles.profileCard], { [styles.editing]: !readonly })}>\n      {formData?.avatar && (\n        <div className={styles.avatarWrapper}>\n          <Avatar\n            src={formData?.avatar}\n            alt=\"Avatar\"\n          />\n        </div>\n      )}\n      <Input\n        value={formData?.firstName}\n        placeholder=\"Your First Name\"\n        className={styles.input}\n        readonly={readonly}\n        onChange={handleFirstNameChange}\n      />\n      <Input\n        value={formData?.lastName}\n        placeholder=\"Your Last Name\"\n        className={styles.input}\n        readonly={readonly}\n        onChange={handleLastNameChange}\n      />\n      <Input\n        value={formData?.age}\n        placeholder=\"Your Age\"\n        className={styles.input}\n        readonly={readonly}\n        onChange={handleAgeChange}\n      />\n      <Input\n        value={formData?.city}\n        placeholder=\"Your City\"\n        className={styles.input}\n        readonly={readonly}\n        onChange={handleCityChange}\n      />\n      <Input\n        value={formData?.username}\n        placeholder=\"Your Username\"\n        className={styles.input}\n        readonly={readonly}\n        onChange={handleUsernameChange}\n      />\n      <Input\n        value={formData?.avatar}\n        placeholder=\"Your Avatar\"\n        className={styles.input}\n        readonly={readonly}\n        onChange={handleAvatarChange}\n      />\n      <CurrencySelect\n        value={formData?.currency}\n        onChange={handleCurrencyChange}\n        readonly={readonly}\n        className={styles.input}\n      />\n      <CountrySelect\n        value={formData?.country}\n        onChange={handleCountryChange}\n        readonly={readonly}\n        className={styles.input}\n      />\n    </div>\n  )\n}\n"],"names":[],"sourceRoot":""}