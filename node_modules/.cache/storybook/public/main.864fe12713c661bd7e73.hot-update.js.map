{"version":3,"file":"main.864fe12713c661bd7e73.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AADA;AACA;AACA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;AC3BA","sources":["webpack://ulbi/./src/features/AuthByUsername/model/services/loginByUsername/loginByUsername.ts","webpack://ulbi/./src/shared/constants/localStorage.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nimport { User, userActions } from \"entities/User\";\nimport { USER_KEY } from \"shared/constants/localStorage\";\n\ninterface LoginByUsernameProps {\n  username: string;\n  password: string;\n}\n\nexport const loginByUsername = createAsyncThunk<User, LoginByUsernameProps, { rejectValue: string }>(\n  'login/loginByUsername',\n  async (authData, thunkAPI) => {\n    try {\n      const response = await axios.post<User>('http://localhost:8000/login', authData);\n\n      if(!response.data) {\n        throw new Error('error')\n      }\n\n      localStorage.setItem(USER_KEY, JSON.stringify(response.data))\n      thunkAPI.dispatch(userActions.setAuthData(response.data));\n\n      return response.data;\n    } catch(e) {\n      return thunkAPI.rejectWithValue('Incorrect email or password');\n    }\n  }\n)","export const USER_KEY = 'user';"],"names":[],"sourceRoot":""}