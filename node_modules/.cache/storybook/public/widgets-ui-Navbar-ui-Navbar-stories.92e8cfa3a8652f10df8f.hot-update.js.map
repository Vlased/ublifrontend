{"version":3,"file":"widgets-ui-Navbar-ui-Navbar-stories.92e8cfa3a8652f10df8f.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAGA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAGA;AACA;AAAA;AACA;AAGA;AA7CA","sources":["webpack://ulbi/./src/widgets/ui/Navbar/ui/Navbar.tsx"],"sourcesContent":["import { getAuthData } from 'entities/User'\nimport { LoginModal } from 'features/AuthByUsername'\nimport { useCallback, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { classNames } from 'shared/lib/classNames/classNames'\nimport { Button, ButtonTheme } from 'shared/ui/Button/Button'\nimport styles from './Navbar.module.scss'\n\ninterface NavbarProps {\n  className?: string\n}\n\nexport const Navbar: React.FC<NavbarProps> = ({ className }) => {\n  const { t } = useTranslation();\n  const [isAuthModalOpen, setIsAuthModalOpen] = useState<boolean>(false);\n  const dispatch = useDispatch();\n  const authData = useSelector(getAuthData);\n\n  const handleModalOpen = useCallback(() => {\n    setIsAuthModalOpen(true);\n  }, [])\n\n  const handleAuthModalClose = useCallback(() => {\n    setIsAuthModalOpen(false)\n  }, [])\n\n  const handleLogOut = useCallback(() => {\n\n  }, [dispatch])\n\n  if (authData) {\n    return (\n      <div className={classNames([styles.navbar, className])}>\n        <Button\n          theme={ButtonTheme.CLEAR_INVERTED}\n          onClick={handleLogOut}\n        >\n          {t('Log Out')}\n        </Button>\n      </div>\n    )\n  }\n\n  return (\n    <div className={classNames([styles.navbar, className])}>\n      <Button\n        theme={ButtonTheme.CLEAR_INVERTED}\n        onClick={handleModalOpen}\n      >\n        {t('Enter')}\n      </Button>\n      <LoginModal \n        isOpen={isAuthModalOpen}\n        onClose={handleAuthModalClose}\n      />\n    </div>\n  )\n}\n"],"names":[],"sourceRoot":""}