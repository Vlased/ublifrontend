{"version":3,"file":"widgets-ui-Navbar-ui-Navbar-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;ACCA;AAAA;AAAA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AAAA;AAOA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAGA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAGA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://ulbi/./src/features/AuthByUsername/index.ts","webpack://ulbi/./src/features/AuthByUsername/ui/LoginForm/LoginForm.async.tsx","webpack://ulbi/./src/features/AuthByUsername/ui/LoginModal/LoginModal.tsx","webpack://ulbi/./src/widgets/ui/Navbar/ui/Navbar.tsx","webpack://ulbi/./src/widgets/ui/Navbar/ui/Navbar.module.scss","webpack://ulbi/./src/widgets/ui/Navbar/ui/Navbar.module.scss?a8b4"],"sourcesContent":["import LoginModal from './ui/LoginModal/LoginModal'\n\nexport type { LoginSchema } from './model/types/loginSchema'\nexport { LoginModal }\n","import { lazy } from 'react'\n\nexport const LoginFormAsync = lazy(async () => await import('./LoginForm'))\n","import { memo } from 'react'\nimport { Modal } from 'shared/ui/Modal/Modal'\nimport { LoginFormAsync as LoginForm } from '../LoginForm/LoginForm.async'\n\ninterface LoginModalProps {\n  isOpen: boolean\n  onClose: () => void\n}\n\nconst LoginModal: React.FC<LoginModalProps> = memo(({ isOpen, onClose }) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      lazy\n    >\n      <LoginForm onSuccess={onClose} />\n    </Modal>\n  )\n})\n\nexport default LoginModal\n","import { getAuthData, userActions } from '../../../../entities/User'\nimport { LoginModal } from 'features/AuthByUsername'\nimport { memo, useCallback, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { classNames } from 'shared/lib/classNames/classNames'\nimport { Button, ButtonTheme } from 'shared/ui/Button/Button'\nimport styles from './Navbar.module.scss'\n\ninterface NavbarProps {\n  className?: string\n}\n\nexport const Navbar: React.FC<NavbarProps> = memo(({ className }) => {\n  const { t } = useTranslation()\n  const [isAuthModalOpen, setIsAuthModalOpen] = useState<boolean>(false)\n  const dispatch = useDispatch()\n  const authData = useSelector(getAuthData)\n\n  const handleModalOpen = useCallback(() => {\n    setIsAuthModalOpen(true)\n  }, [])\n\n  const handleAuthModalClose = useCallback(() => {\n    setIsAuthModalOpen(false)\n  }, [])\n\n  const handleLogOut = useCallback(() => {\n    dispatch(userActions.clearAuthData())\n  }, [dispatch])\n\n  if (authData) {\n    return (\n      <div className={classNames([styles.navbar, className])}>\n        <Button\n          theme={ButtonTheme.CLEAR_INVERTED}\n          onClick={handleLogOut}\n        >\n          {t('Log Out')}\n        </Button>\n      </div>\n    )\n  }\n\n  return (\n    <div className={classNames([styles.navbar, className])}>\n      <Button\n        theme={ButtonTheme.CLEAR_INVERTED}\n        onClick={handleModalOpen}\n      >\n        {t('Enter')}\n      </Button>\n      {isAuthModalOpen && <LoginModal\n        isOpen={isAuthModalOpen}\n        onClose={handleAuthModalClose}\n      />}\n    </div>\n  )\n})\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.src-widgets-ui-Navbar-ui-Navbar-module__navbar--DAkNj {\n  width: 100%;\n  height: var(--navbar-height);\n  background: var(--inverted-bg-color);\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 20px;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/widgets/ui/Navbar/ui/Navbar.module.scss\"],\"names\":[],\"mappings\":\"AAAA;EACE,WAAA;EACA,4BAAA;EACA,oCAAA;EACA,aAAA;EACA,yBAAA;EACA,mBAAA;EACA,aAAA;AACF\",\"sourcesContent\":[\".navbar {\\n  width: 100%;\\n  height: var(--navbar-height);\\n  background: var(--inverted-bg-color);\\n  display: flex;\\n  justify-content: flex-end;\\n  align-items: center;\\n  padding: 20px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"navbar\": `src-widgets-ui-Navbar-ui-Navbar-module__navbar--DAkNj`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[13].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./Navbar.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[13].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./Navbar.module.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[13].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./Navbar.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}