{"version":3,"file":"shared-ui-AppLink-AppLink-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAWA;AAKA;AAJA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://ulbi/./src/shared/lib/classNames/classNames.ts","webpack://ulbi/./src/shared/ui/AppLink/AppLink.tsx","webpack://ulbi/./src/shared/ui/AppLink/AppLink.module.scss","webpack://ulbi/./src/shared/ui/AppLink/AppLink.module.scss?c8ca"],"sourcesContent":["export type Mods = Record<string, boolean | undefined>\n\nexport const classNames = (classes: Array<string | undefined>, mods: Mods = {}): string => {\n  const mainClasses = classes.filter(Boolean)\n\n  const modsClasses = Object.entries(mods)\n    .filter(([className, value]) => Boolean(value))\n    .map(([className]) => className)\n\n  return [...mainClasses, ...modsClasses].join(' ')\n}\n","import React, { memo } from 'react'\nimport { Link, type LinkProps } from 'react-router-dom'\nimport { classNames } from 'shared/lib/classNames/classNames'\nimport styles from './AppLink.module.scss'\n\nexport enum AppLinkTheme {\n  PRIMARY = 'primary',\n  INVERTED = 'inverted',\n}\n\ninterface AppLinkProps {\n  className?: string\n  children?: React.ReactNode\n  theme?: AppLinkTheme\n}\n\nexport const AppLink: React.FC<AppLinkProps & LinkProps> = memo(({\n  className = '',\n  theme = AppLinkTheme.PRIMARY,\n  children,\n  ...props\n}) => {\n  return (\n    <Link\n      className={classNames([styles[theme], className])}\n      {...props}>\n      {children}\n    </Link>\n  )\n})\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.src-shared-ui-AppLink-AppLink-module__primary--lPwbq {\n  color: var(--primary-color);\n}\n\n.src-shared-ui-AppLink-AppLink-module__inverted--LrMef {\n  color: var(--inverted-primary-color);\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/shared/ui/AppLink/AppLink.module.scss\"],\"names\":[],\"mappings\":\"AAAA;EACE,2BAAA;AACF;;AAEA;EACE,oCAAA;AACF\",\"sourcesContent\":[\".primary {\\n  color: var(--primary-color);\\n}\\n\\n.inverted {\\n  color: var(--inverted-primary-color);\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"primary\": `src-shared-ui-AppLink-AppLink-module__primary--lPwbq`,\n\t\"inverted\": `src-shared-ui-AppLink-AppLink-module__inverted--LrMef`\n};\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[13].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./AppLink.module.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[13].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./AppLink.module.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[13].use[1]!../../../../node_modules/sass-loader/dist/cjs.js!./AppLink.module.scss\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}