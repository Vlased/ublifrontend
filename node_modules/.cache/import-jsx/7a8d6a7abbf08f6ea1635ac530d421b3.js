const React = require('react');
const {
  Box,
  Text
} = require('ink');
const {
  STATUS_NOT_STARTED,
  STATUS_RUNNING,
  STATUS_SUCCEEDED,
  STATUS_FAILED
} = require('../../task-runner');
const STATUS_CONFIGURATION_MAP = {
  [STATUS_NOT_STARTED]: {
    title: 'WAIT',
    color: 'grey'
  },
  [STATUS_RUNNING]: {
    title: 'RUNS',
    color: 'yellow'
  },
  [STATUS_SUCCEEDED]: {
    title: 'PASS',
    color: 'green'
  },
  [STATUS_FAILED]: {
    title: 'FAIL',
    color: 'red'
  }
};
const Status = ({
  status
}) => {
  const {
    color,
    title
  } = STATUS_CONFIGURATION_MAP[status];
  return /*#__PURE__*/React.createElement(Text, {
    backgroundColor: color,
    bold: true,
    color: "#fff"
  }, ` ${title} `);
};
const Task = ({
  status,
  prefix,
  title
}) => /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Status, {
  status: status
}), /*#__PURE__*/React.createElement(Box, {
  marginLeft: 1
}, /*#__PURE__*/React.createElement(Text, {
  dimColor: true
}, prefix), /*#__PURE__*/React.createElement(Text, {
  bold: true
}, title)));
module.exports = React.memo(Task);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJCb3giLCJUZXh0IiwiU1RBVFVTX05PVF9TVEFSVEVEIiwiU1RBVFVTX1JVTk5JTkciLCJTVEFUVVNfU1VDQ0VFREVEIiwiU1RBVFVTX0ZBSUxFRCIsIlNUQVRVU19DT05GSUdVUkFUSU9OX01BUCIsInRpdGxlIiwiY29sb3IiLCJTdGF0dXMiLCJzdGF0dXMiLCJjcmVhdGVFbGVtZW50IiwiYmFja2dyb3VuZENvbG9yIiwiYm9sZCIsIlRhc2siLCJwcmVmaXgiLCJtYXJnaW5MZWZ0IiwiZGltQ29sb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwibWVtbyJdLCJzb3VyY2VzIjpbIlRhc2suanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgeyBCb3gsIFRleHQgfSA9IHJlcXVpcmUoJ2luaycpO1xuY29uc3Qge1xuICBTVEFUVVNfTk9UX1NUQVJURUQsXG4gIFNUQVRVU19SVU5OSU5HLFxuICBTVEFUVVNfU1VDQ0VFREVELFxuICBTVEFUVVNfRkFJTEVELFxufSA9IHJlcXVpcmUoJy4uLy4uL3Rhc2stcnVubmVyJyk7XG5cbmNvbnN0IFNUQVRVU19DT05GSUdVUkFUSU9OX01BUCA9IHtcbiAgW1NUQVRVU19OT1RfU1RBUlRFRF06IHtcbiAgICB0aXRsZTogJ1dBSVQnLFxuICAgIGNvbG9yOiAnZ3JleScsXG4gIH0sXG4gIFtTVEFUVVNfUlVOTklOR106IHtcbiAgICB0aXRsZTogJ1JVTlMnLFxuICAgIGNvbG9yOiAneWVsbG93JyxcbiAgfSxcbiAgW1NUQVRVU19TVUNDRUVERURdOiB7XG4gICAgdGl0bGU6ICdQQVNTJyxcbiAgICBjb2xvcjogJ2dyZWVuJyxcbiAgfSxcbiAgW1NUQVRVU19GQUlMRURdOiB7XG4gICAgdGl0bGU6ICdGQUlMJyxcbiAgICBjb2xvcjogJ3JlZCcsXG4gIH0sXG59O1xuXG5jb25zdCBTdGF0dXMgPSAoeyBzdGF0dXMgfSkgPT4ge1xuICBjb25zdCB7IGNvbG9yLCB0aXRsZSB9ID0gU1RBVFVTX0NPTkZJR1VSQVRJT05fTUFQW3N0YXR1c107XG4gIHJldHVybiA8VGV4dCBiYWNrZ3JvdW5kQ29sb3I9e2NvbG9yfSBib2xkIGNvbG9yPVwiI2ZmZlwiPntgICR7dGl0bGV9IGB9PC9UZXh0Pjtcbn07XG5cbmNvbnN0IFRhc2sgPSAoeyBzdGF0dXMsIHByZWZpeCwgdGl0bGUgfSkgPT4gKFxuICA8Qm94PlxuICAgIDxTdGF0dXMgc3RhdHVzPXtzdGF0dXN9IC8+XG4gICAgPEJveCBtYXJnaW5MZWZ0PXsxfT5cbiAgICAgIDxUZXh0IGRpbUNvbG9yPntwcmVmaXh9PC9UZXh0PlxuICAgICAgPFRleHQgYm9sZD57dGl0bGV9PC9UZXh0PlxuICAgIDwvQm94PlxuICA8L0JveD5cbik7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3QubWVtbyhUYXNrKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU07RUFBRUMsR0FBRztFQUFFQztBQUFLLENBQUMsR0FBR0YsT0FBTyxDQUFDLEtBQUssQ0FBQztBQUNwQyxNQUFNO0VBQ0pHLGtCQUFrQjtFQUNsQkMsY0FBYztFQUNkQyxnQkFBZ0I7RUFDaEJDO0FBQ0YsQ0FBQyxHQUFHTixPQUFPLENBQUMsbUJBQW1CLENBQUM7QUFFaEMsTUFBTU8sd0JBQXdCLEdBQUc7RUFDL0IsQ0FBQ0osa0JBQWtCLEdBQUc7SUFDcEJLLEtBQUssRUFBRSxNQUFNO0lBQ2JDLEtBQUssRUFBRTtFQUNULENBQUM7RUFDRCxDQUFDTCxjQUFjLEdBQUc7SUFDaEJJLEtBQUssRUFBRSxNQUFNO0lBQ2JDLEtBQUssRUFBRTtFQUNULENBQUM7RUFDRCxDQUFDSixnQkFBZ0IsR0FBRztJQUNsQkcsS0FBSyxFQUFFLE1BQU07SUFDYkMsS0FBSyxFQUFFO0VBQ1QsQ0FBQztFQUNELENBQUNILGFBQWEsR0FBRztJQUNmRSxLQUFLLEVBQUUsTUFBTTtJQUNiQyxLQUFLLEVBQUU7RUFDVDtBQUNGLENBQUM7QUFFRCxNQUFNQyxNQUFNLEdBQUdBLENBQUM7RUFBRUM7QUFBTyxDQUFDLEtBQUs7RUFDN0IsTUFBTTtJQUFFRixLQUFLO0lBQUVEO0VBQU0sQ0FBQyxHQUFHRCx3QkFBd0IsQ0FBQ0ksTUFBTSxDQUFDO0VBQ3pELG9CQUFPWixLQUFBLENBQUFhLGFBQUEsQ0FBQ1YsSUFBSTtJQUFDVyxlQUFlLEVBQUVKLEtBQU07SUFBQ0ssSUFBSTtJQUFDTCxLQUFLLEVBQUM7RUFBTSxHQUFHLElBQUdELEtBQU0sR0FBUyxDQUFDO0FBQzlFLENBQUM7QUFFRCxNQUFNTyxJQUFJLEdBQUdBLENBQUM7RUFBRUosTUFBTTtFQUFFSyxNQUFNO0VBQUVSO0FBQU0sQ0FBQyxrQkFDckNULEtBQUEsQ0FBQWEsYUFBQSxDQUFDWCxHQUFHLHFCQUNGRixLQUFBLENBQUFhLGFBQUEsQ0FBQ0YsTUFBTTtFQUFDQyxNQUFNLEVBQUVBO0FBQU8sQ0FBRSxDQUFDLGVBQzFCWixLQUFBLENBQUFhLGFBQUEsQ0FBQ1gsR0FBRztFQUFDZ0IsVUFBVSxFQUFFO0FBQUUsZ0JBQ2pCbEIsS0FBQSxDQUFBYSxhQUFBLENBQUNWLElBQUk7RUFBQ2dCLFFBQVE7QUFBQSxHQUFFRixNQUFhLENBQUMsZUFDOUJqQixLQUFBLENBQUFhLGFBQUEsQ0FBQ1YsSUFBSTtFQUFDWSxJQUFJO0FBQUEsR0FBRU4sS0FBWSxDQUNyQixDQUNGLENBQ047QUFFRFcsTUFBTSxDQUFDQyxPQUFPLEdBQUdyQixLQUFLLENBQUNzQixJQUFJLENBQUNOLElBQUksQ0FBQyJ9