{"version":3,"sources":["../src/manager.ts","../src/constants.ts","../src/Tool.tsx"],"names":["addons","types","ADDON_ID","TOOL_ID","EVENT_NAME","React","Icons","IconButton","WithTooltip","TooltipLinkList","useChannel","useGlobals","getValue","value","getLocales","locales","locale","onSelect","key","Tool","globals","updateGlobals","emit","onHide","selected","Tool_default","viewMode"],"mappings":"AAAA,OAAQ,UAAAA,EAAQ,SAAAC,MAAY,yBCArB,IAAMC,EAAW,uBACXC,EAAU,4BACVC,EAAa,iBCF1B,OAAOC,MAAW,QAClB,OACI,SAAAC,EACA,cAAAC,EACA,eAAAC,EACA,mBAAAC,MACG,wBACP,OAAQ,cAAAC,EAAY,cAAAC,MAAiB,yBAgBrC,IAAMC,EAAYC,GACV,OAAOA,GAAU,SACV,CAAC,MAAOA,CAAK,EAEjB,CACH,MAAOA,EAAM,OAAS,GACtB,KAAMA,EAAM,KACZ,MAAOA,EAAM,KACjB,EAGEC,EAAa,CACfC,EACAC,EACAC,IAEAF,EACM,OAAO,QAAQA,CAAO,EAAE,IAAI,CAAC,CAACG,EAAKL,CAAK,KAAO,CAC3C,GAAGD,EAASC,CAAK,EACjB,GAAIK,EACJ,OAAQA,IAAQF,EAChB,QAAS,IAAMC,EAASC,CAAG,CAC/B,EAAE,EACF,CACI,CACI,GAAI,OACJ,MAAO,2BACP,OAAQ,GACR,QAAS,IAAM,CAAC,CACpB,CACJ,EAEJC,EAAO,IAAM,CACf,GAAM,CAACC,EAASC,CAAa,EAAIV,EAAW,EACtC,CAAC,OAAAK,EAAQ,QAAAD,CAAO,EAAIK,EACpBE,EAAOZ,EAAW,CAAC,CAAC,EAE1B,OACIL,EAAA,cAACG,EAAA,CACG,UAAU,MACV,QAAS,CAAC,CAAC,OAAAe,CAAM,IACblB,EAAA,cAACI,EAAA,CACG,MAAOK,EAAWC,EAASC,EAASQ,GAAa,CACzCA,IAAaR,IACbK,EAAc,CAAC,OAAQG,CAAQ,CAAC,EAChCF,EAAKlB,EAAYoB,CAAQ,GAE7BD,EAAO,CACX,CAAC,EACL,EAEJ,QAAQ,SAERlB,EAAA,cAACE,EAAA,CAAW,IAAI,cAAc,MAAM,mBAChCF,EAAA,cAACC,EAAA,CAAM,KAAK,QAAQ,CACxB,CACJ,CAER,EAEOmB,EAAQN,EF/EfnB,EAAO,SAASE,EAAU,IAAM,CAC5BF,EAAO,IAAIG,EAAS,CAChB,MAAO,iBACP,KAAMF,EAAM,KACZ,MAAO,CAAC,CAAC,SAAAyB,CAAQ,IAAM,CAAC,CAACA,GAAU,MAAM,gBAAgB,EACzD,OAAQD,CACZ,CAAC,CACL,CAAC","sourcesContent":["import {addons, types} from '@storybook/manager-api';\nimport {ADDON_ID, TOOL_ID} from './constants';\nimport Tool from './Tool';\n\naddons.register(ADDON_ID, () => {\n    addons.add(TOOL_ID, {\n        title: 'Storybook i18n',\n        type: types.TOOL,\n        match: ({viewMode}) => !!viewMode?.match(/^(story|docs)$/),\n        render: Tool,\n    });\n});\n","export const ADDON_ID = 'storybook/i18n-addon';\nexport const TOOL_ID = 'storybook/i18n-addon/tool';\nexport const EVENT_NAME = 'LOCALE_CHANGED';\n","import React from 'react';\nimport {\n    Icons,\n    IconButton,\n    WithTooltip,\n    TooltipLinkList,\n} from '@storybook/components';\nimport {useChannel, useGlobals} from '@storybook/manager-api';\nimport {EVENT_NAME} from './constants';\n\nexport interface Link {\n    id: string;\n    title: string;\n    active: boolean;\n    onClick: () => void;\n    left?: string;\n    right?: string;\n}\n\nexport type LocaleValue =\n    | string\n    | {title: string; left?: string; right?: string};\n\nconst getValue = (value: LocaleValue) => {\n    if (typeof value === 'string') {\n        return {title: value};\n    }\n    return {\n        title: value.title || '',\n        left: value.left,\n        right: value.right,\n    };\n};\n\nconst getLocales = (\n    locales: Record<string, LocaleValue>,\n    locale: string,\n    onSelect: (selected: string) => void\n): Link[] =>\n    locales\n        ? Object.entries(locales).map(([key, value]) => ({\n              ...getValue(value),\n              id: key,\n              active: key === locale,\n              onClick: () => onSelect(key),\n          }))\n        : [\n              {\n                  id: 'none',\n                  title: 'No locales in parameters',\n                  active: true,\n                  onClick: () => {},\n              },\n          ];\n\nconst Tool = () => {\n    const [globals, updateGlobals] = useGlobals();\n    const {locale, locales} = globals;\n    const emit = useChannel({});\n\n    return (\n        <WithTooltip\n            placement=\"top\"\n            tooltip={({onHide}) => (\n                <TooltipLinkList\n                    links={getLocales(locales, locale, (selected) => {\n                        if (selected !== locale) {\n                            updateGlobals({locale: selected});\n                            emit(EVENT_NAME, selected);\n                        }\n                        onHide();\n                    })}\n                />\n            )}\n            trigger=\"click\"\n        >\n            <IconButton key=\"i18n-locale\" title=\"Locale Selector\">\n                <Icons icon=\"globe\" />\n            </IconButton>\n        </WithTooltip>\n    );\n};\n\nexport default Tool;\n"]}